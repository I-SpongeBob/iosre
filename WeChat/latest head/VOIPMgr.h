//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "MMService.h"

#import "AUAudioDataSource.h"
#import "AVVideoDataSource.h"
#import "AVVideoDeviceSessionDelegate.h"
#import "CNetworkStatusExt.h"
#import "IAUAudioDeviceExt.h"
#import "INetworkStatusMgrExt.h"
#import "ISysCallCheckExt.h"
#import "IVOIPSyncExt.h"
#import "MMService.h"
#import "PBMessageObserverDelegate.h"

@class AUAudioDevice, AVVideoDevice, CMMotionManager, MMTimer, NSRecursiveLock, NSString, VOIPComponent, VOIPDialData, VOIPKernelLog, VOIPVideoRender;

@interface VOIPMgr : MMService <AVVideoDataSource, AUAudioDataSource, IAUAudioDeviceExt, ISysCallCheckExt, IVOIPSyncExt, PBMessageObserverDelegate, INetworkStatusMgrExt, CNetworkStatusExt, MMService, AVVideoDeviceSessionDelegate>
{
    _Bool mIsInterrupted;
    _Bool mIsGotRelayData;
    _Bool mIsGotStrategy;
    _Bool mIsGotSvrAddr;
    _Bool mIsCanConnect;
    _Bool mIsConnected;
    _Bool mIsCanTalk;
    _Bool mIsTalked;
    _Bool mIsEngineStarted;
    _Bool mIsCanSendData;
    _Bool mIsPreConnect;
    _Bool mIsVideoStarted;
    _Bool mIsAudioStarted;
    _Bool mIsRecordStarted;
    _Bool mIsPreConnectFail;
    _Bool mIsVoipAnswer;
    _Bool mIsVoipAccepted;
    unsigned int uiRingPlayState;
    unsigned int mLastNetworkStatus;
    unsigned int mLastNetType;
    NSRecursiveLock *inputVideoRenderLock;
    id <IVOIPVideoDeviceDelegate> m_videoDeviceDelegate;
    _Bool mNeedSpeedTest;
    int mSpeedTestStatus;
    struct _SpeedTestInfo mSpeedTestInfo;
    _Bool mIsHWEncEnable;
    _Bool mIsHWEncUsing;
    unsigned int muiHWEncExceptionMask;
    unsigned int muiHWDecExceptionMask;
    unsigned int muiUnKnowDataNum;
    int mHWErrorEncFrmCount;
    _Bool mIsHWDecEnable;
    _Bool mIsHWDecUsing;
    int mHWErrorDecFrmCount;
    _Bool mIReqFlag;
    _Bool mIsGetRemoteHW;
    _Bool mIsStopHWEnc;
    int mPrevFrmType;
    int mHWBR;
    int mHWIGap;
    int mHWWidth;
    int mHWHeight;
    char *mHWYUVbuffer;
    char *mCameraBuf;
    unsigned long long mHWYUVLength;
    struct __CVBuffer *mPixelBufferDS;
    unsigned int mNextInviteAvailable;
    struct ISpeedTestChannel mSpeedTestChannel;
    VOIPKernelLog *mKernelLog;
    _Bool StatReportStatus;
    _Bool mSendInviteStatus;
    _Bool mHasAccept;
    _Bool mIsPausedByInterrupt;
    _Bool mIsDangerTalk;
    _Bool mIsShouldSendSPS;
    _Bool bForceKeyFrame;
    _Bool _mIsVideoInited;
    _Bool _m_usingFrontCameraLastFrame;
    unsigned int mVoIPType;
    unsigned int mTimeCounter;
    int mCntTryStartAudioDev;
    int cap_fps;
    int send_fps;
    int recv_fps;
    int send_kbps;
    int recv_kbps;
    unsigned int mCaptureFrames;
    int mReportUsePreconnect;
    int mReportPreconnectSuccess;
    int status;
    int mDialUsedTime;
    int mCallTime;
    int mCancelInviteTime;
    int mAnswerTime;
    int callResultStatus;
    int exitAbnormalStatus;
    int DoubleLinkSwitchReportStatus;
    unsigned int mIsRemoteUserAbort;
    unsigned int mIsUserAbort;
    unsigned int mDoubleLinkSwitchReqCnt;
    unsigned int mDoubleLinkSwitchSucToDirectCnt;
    unsigned int mDoubleLinkSwitchSucToRelayCnt;
    int AudioTsdfBeyond3G;
    int AudioTsdfEdge;
    int PassthroughQosAlgorithm;
    int FastPlayRepair;
    int bUseNewP2S;
    int bAudioDTX;
    int mSwitchInterval;
    int mSwitchTcpPktCntThreshold;
    int bEnableRmIOAndS3A;
    int iAudioEnableSpkec;
    int iEnableConfigIosMic;
    int mHWCloseCmd;
    int mSvrCfgListV;
    unsigned int mSwitchFlag;
    int mEnableDataAccept;
    int mLocalQosMaxBRForRelay;
    int mQualityRedirectReqCnt;
    int mQualityDoRedirectCnt;
    int bIsGotFirstValidSample;
    int mLastSwitchTimer;
    unsigned int mInviteId;
    int mInitNetType;
    int mLastSimCardType;
    int mMaxHWEncSize;
    int mOSType;
    int mMaxSWEncSize;
    unsigned int mDangerRoomId;
    int mVTEncStatus;
    int mVTDecStatus;
    int mLeftHWEncFrms;
    unsigned int _m_cameraChangeToOrientationLastCount;
    VOIPVideoRender *inputVideoRender;
    VOIPVideoRender *outputVideoRender;
    VOIPVideoRender *smallInputVideoRender;
    VOIPDialData *mDialData;
    VOIPComponent *mComponent;
    AUAudioDevice *mAudioDevice;
    AVVideoDevice *mVideoDevice;
    NSRecursiveLock *mAudioEncLock;
    NSRecursiveLock *mAudioDecLock;
    NSRecursiveLock *mVideoEncLock;
    NSRecursiveLock *mVideoP2SLock;
    NSRecursiveLock *mVideoDecLock;
    NSRecursiveLock *mVideoHWEncLock;
    NSRecursiveLock *mVideoHWDecLock;
    NSRecursiveLock *mStartAudioLock;
    NSRecursiveLock *mStartVideoLock;
    NSRecursiveLock *mStartRecordLock;
    NSRecursiveLock *outputVideoRenderLock;
    MMTimer *mVoipTimer;
    char *mPreviewBuf;
    unsigned long long mSendInviteTime;
    unsigned long long mRecvInviteTime;
    unsigned long long mRealAcceptCallTime;
    unsigned long long mStartTalkingTime;
    unsigned long long mRecvFirstAVDataPacketTime;
    unsigned long long mFirstPktReceivedTime;
    unsigned long long mAcceptReceivedTime;
    unsigned long long mSyncAcceptReceivedTime;
    unsigned long long mLastDisconnectSysCallTime;
    struct VOIPSpeedTestChannelAdapter *mSpeedTestAdapter;
    NSString *mWarningString;
    unsigned long long mDangerRoomKey;
    struct OpaqueVTCompressionSession *mVTCompressionSession;
    struct OpaqueVTDecompressionSession *mVTDecompressionSession;
    struct opaqueCMFormatDescription *mVTDecFormat;
    struct __CVBuffer *decodedFrameBuffer;
    NSRecursiveLock *_mAudioPlayLock;
    long long _m_videoOrientation;
    long long _m_cameraOrientation;
    long long _m_cameraChangeToOrientation;
    CMMotionManager *_m_motionMgr;
    struct timeval dialStartTime;
    struct timeval mStartTalkTime;
    struct DialReport_t dialReport;
}

@property(retain, nonatomic) CMMotionManager *m_motionMgr; // @synthesize m_motionMgr=_m_motionMgr;
@property(nonatomic) unsigned int m_cameraChangeToOrientationLastCount; // @synthesize m_cameraChangeToOrientationLastCount=_m_cameraChangeToOrientationLastCount;
@property(nonatomic) long long m_cameraChangeToOrientation; // @synthesize m_cameraChangeToOrientation=_m_cameraChangeToOrientation;
@property(nonatomic) _Bool m_usingFrontCameraLastFrame; // @synthesize m_usingFrontCameraLastFrame=_m_usingFrontCameraLastFrame;
@property(nonatomic) long long m_cameraOrientation; // @synthesize m_cameraOrientation=_m_cameraOrientation;
@property(nonatomic) long long m_videoOrientation; // @synthesize m_videoOrientation=_m_videoOrientation;
@property(nonatomic) _Bool mIsVideoInited; // @synthesize mIsVideoInited=_mIsVideoInited;
@property(retain, nonatomic) NSRecursiveLock *mAudioPlayLock; // @synthesize mAudioPlayLock=_mAudioPlayLock;
@property struct __CVBuffer *decodedFrameBuffer; // @synthesize decodedFrameBuffer;
@property _Bool bForceKeyFrame; // @synthesize bForceKeyFrame;
@property int mLeftHWEncFrms; // @synthesize mLeftHWEncFrms;
@property _Bool mIsShouldSendSPS; // @synthesize mIsShouldSendSPS;
@property struct opaqueCMFormatDescription *mVTDecFormat; // @synthesize mVTDecFormat;
@property int mVTDecStatus; // @synthesize mVTDecStatus;
@property int mVTEncStatus; // @synthesize mVTEncStatus;
@property struct OpaqueVTDecompressionSession *mVTDecompressionSession; // @synthesize mVTDecompressionSession;
@property struct OpaqueVTCompressionSession *mVTCompressionSession; // @synthesize mVTCompressionSession;
@property(nonatomic) unsigned long long mDangerRoomKey; // @synthesize mDangerRoomKey;
@property(nonatomic) unsigned int mDangerRoomId; // @synthesize mDangerRoomId;
@property(retain, nonatomic) NSString *mWarningString; // @synthesize mWarningString;
@property(nonatomic) _Bool mIsDangerTalk; // @synthesize mIsDangerTalk;
@property(nonatomic) _Bool mIsPausedByInterrupt; // @synthesize mIsPausedByInterrupt;
@property(nonatomic) int mMaxSWEncSize; // @synthesize mMaxSWEncSize;
@property(nonatomic) int mOSType; // @synthesize mOSType;
@property(nonatomic) int mMaxHWEncSize; // @synthesize mMaxHWEncSize;
@property(nonatomic) int mLastSimCardType; // @synthesize mLastSimCardType;
@property(nonatomic) int mInitNetType; // @synthesize mInitNetType;
@property(nonatomic) struct VOIPSpeedTestChannelAdapter *mSpeedTestAdapter; // @synthesize mSpeedTestAdapter;
@property(nonatomic) _Bool mHasAccept; // @synthesize mHasAccept;
@property(nonatomic) unsigned int mInviteId; // @synthesize mInviteId;
@property(nonatomic) int mLastSwitchTimer; // @synthesize mLastSwitchTimer;
@property(nonatomic) int bIsGotFirstValidSample; // @synthesize bIsGotFirstValidSample;
@property(nonatomic) unsigned long long mLastDisconnectSysCallTime; // @synthesize mLastDisconnectSysCallTime;
@property(nonatomic) unsigned long long mSyncAcceptReceivedTime; // @synthesize mSyncAcceptReceivedTime;
@property(nonatomic) unsigned long long mAcceptReceivedTime; // @synthesize mAcceptReceivedTime;
@property(nonatomic) unsigned long long mFirstPktReceivedTime; // @synthesize mFirstPktReceivedTime;
@property(nonatomic) int mQualityDoRedirectCnt; // @synthesize mQualityDoRedirectCnt;
@property(nonatomic) int mQualityRedirectReqCnt; // @synthesize mQualityRedirectReqCnt;
@property(nonatomic) int mLocalQosMaxBRForRelay; // @synthesize mLocalQosMaxBRForRelay;
@property(nonatomic) int mEnableDataAccept; // @synthesize mEnableDataAccept;
@property(nonatomic) unsigned int mSwitchFlag; // @synthesize mSwitchFlag;
@property(nonatomic) int mSvrCfgListV; // @synthesize mSvrCfgListV;
@property(nonatomic) int mHWCloseCmd; // @synthesize mHWCloseCmd;
@property(nonatomic) int iEnableConfigIosMic; // @synthesize iEnableConfigIosMic;
@property(nonatomic) int iAudioEnableSpkec; // @synthesize iAudioEnableSpkec;
@property(nonatomic) int bEnableRmIOAndS3A; // @synthesize bEnableRmIOAndS3A;
@property(nonatomic) int mSwitchTcpPktCntThreshold; // @synthesize mSwitchTcpPktCntThreshold;
@property(nonatomic) int mSwitchInterval; // @synthesize mSwitchInterval;
@property(nonatomic) int bAudioDTX; // @synthesize bAudioDTX;
@property(nonatomic) int bUseNewP2S; // @synthesize bUseNewP2S;
@property(nonatomic) int FastPlayRepair; // @synthesize FastPlayRepair;
@property(nonatomic) int PassthroughQosAlgorithm; // @synthesize PassthroughQosAlgorithm;
@property(nonatomic) int AudioTsdfEdge; // @synthesize AudioTsdfEdge;
@property(nonatomic) int AudioTsdfBeyond3G; // @synthesize AudioTsdfBeyond3G;
@property(nonatomic) unsigned int muiUnKnowDataNum; // @synthesize muiUnKnowDataNum;
@property(nonatomic) unsigned int muiHWEncExceptionMask; // @synthesize muiHWEncExceptionMask;
@property(nonatomic) unsigned int mDoubleLinkSwitchSucToRelayCnt; // @synthesize mDoubleLinkSwitchSucToRelayCnt;
@property(nonatomic) unsigned int mDoubleLinkSwitchSucToDirectCnt; // @synthesize mDoubleLinkSwitchSucToDirectCnt;
@property(nonatomic) unsigned int mDoubleLinkSwitchReqCnt; // @synthesize mDoubleLinkSwitchReqCnt;
@property(nonatomic) unsigned long long mRecvFirstAVDataPacketTime; // @synthesize mRecvFirstAVDataPacketTime;
@property(nonatomic) unsigned long long mStartTalkingTime; // @synthesize mStartTalkingTime;
@property(nonatomic) unsigned long long mRealAcceptCallTime; // @synthesize mRealAcceptCallTime;
@property(nonatomic) unsigned int mIsUserAbort; // @synthesize mIsUserAbort;
@property(nonatomic) unsigned int mIsRemoteUserAbort; // @synthesize mIsRemoteUserAbort;
@property(nonatomic) _Bool mSendInviteStatus; // @synthesize mSendInviteStatus;
@property(nonatomic) int DoubleLinkSwitchReportStatus; // @synthesize DoubleLinkSwitchReportStatus;
@property(nonatomic) _Bool StatReportStatus; // @synthesize StatReportStatus;
@property(nonatomic) int exitAbnormalStatus; // @synthesize exitAbnormalStatus;
@property(nonatomic) int callResultStatus; // @synthesize callResultStatus;
@property(nonatomic) int mAnswerTime; // @synthesize mAnswerTime;
@property(nonatomic) int mCancelInviteTime; // @synthesize mCancelInviteTime;
@property(nonatomic) int mCallTime; // @synthesize mCallTime;
@property(nonatomic) int mDialUsedTime; // @synthesize mDialUsedTime;
@property(nonatomic) struct timeval mStartTalkTime; // @synthesize mStartTalkTime;
@property(nonatomic) unsigned long long mRecvInviteTime; // @synthesize mRecvInviteTime;
@property(nonatomic) unsigned long long mSendInviteTime; // @synthesize mSendInviteTime;
@property(nonatomic) int status; // @synthesize status;
@property(nonatomic) struct DialReport_t dialReport; // @synthesize dialReport;
@property(nonatomic) struct timeval dialStartTime; // @synthesize dialStartTime;
@property(nonatomic) int mReportPreconnectSuccess; // @synthesize mReportPreconnectSuccess;
@property(nonatomic) int mReportUsePreconnect; // @synthesize mReportUsePreconnect;
@property(nonatomic) unsigned int mCaptureFrames; // @synthesize mCaptureFrames;
@property(nonatomic) char *mPreviewBuf; // @synthesize mPreviewBuf;
@property(nonatomic) int recv_kbps; // @synthesize recv_kbps;
@property(nonatomic) int send_kbps; // @synthesize send_kbps;
@property(nonatomic) int recv_fps; // @synthesize recv_fps;
@property(nonatomic) int send_fps; // @synthesize send_fps;
@property(nonatomic) int cap_fps; // @synthesize cap_fps;
@property(nonatomic) int mCntTryStartAudioDev; // @synthesize mCntTryStartAudioDev;
@property(nonatomic) unsigned int mTimeCounter; // @synthesize mTimeCounter;
@property(retain, nonatomic) MMTimer *mVoipTimer; // @synthesize mVoipTimer;
@property(retain, nonatomic) NSRecursiveLock *outputVideoRenderLock; // @synthesize outputVideoRenderLock;
@property(retain, nonatomic) NSRecursiveLock *inputVideoRenderLock; // @synthesize inputVideoRenderLock;
@property(retain, nonatomic) NSRecursiveLock *mStartRecordLock; // @synthesize mStartRecordLock;
@property(retain, nonatomic) NSRecursiveLock *mStartVideoLock; // @synthesize mStartVideoLock;
@property(retain, nonatomic) NSRecursiveLock *mStartAudioLock; // @synthesize mStartAudioLock;
@property(retain, nonatomic) NSRecursiveLock *mVideoHWDecLock; // @synthesize mVideoHWDecLock;
@property(retain, nonatomic) NSRecursiveLock *mVideoHWEncLock; // @synthesize mVideoHWEncLock;
@property(retain, nonatomic) NSRecursiveLock *mVideoDecLock; // @synthesize mVideoDecLock;
@property(retain, nonatomic) NSRecursiveLock *mVideoP2SLock; // @synthesize mVideoP2SLock;
@property(retain, nonatomic) NSRecursiveLock *mVideoEncLock; // @synthesize mVideoEncLock;
@property(retain, nonatomic) NSRecursiveLock *mAudioDecLock; // @synthesize mAudioDecLock;
@property(retain, nonatomic) NSRecursiveLock *mAudioEncLock; // @synthesize mAudioEncLock;
@property(retain, nonatomic) AVVideoDevice *mVideoDevice; // @synthesize mVideoDevice;
@property(retain, nonatomic) AUAudioDevice *mAudioDevice; // @synthesize mAudioDevice;
@property(retain, nonatomic) VOIPComponent *mComponent; // @synthesize mComponent;
@property(retain, nonatomic) VOIPDialData *mDialData; // @synthesize mDialData;
@property(nonatomic) unsigned int mVoIPType; // @synthesize mVoIPType;
@property(retain, nonatomic) VOIPVideoRender *outputVideoRender; // @synthesize outputVideoRender;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)onNetworkStatusChange:(unsigned int)arg1;
- (void)ReachabilityChange:(unsigned int)arg1;
- (void)onVideoSessionStartComplete;
- (void)setRingPlayState:(int)arg1;
- (_Bool)getHWCap;
- (id)getDangerUserTips;
- (_Bool)getIsNetDetecting;
- (int)SendSpeedTestResult:(void *)arg1 ResultCount:(int)arg2 TotalCount:(int)arg3 TestID:(unsigned long long)arg4;
- (void)StopNetDetect;
- (void)StartNetDetect;
- (_Bool)getIsTalked;
- (unsigned int)getRoomType;
- (int)getRoomId;
- (long long)getRoomKey;
- (void)SetIsPreConnect:(_Bool)arg1;
- (void)SetIsCanConnect:(_Bool)arg1;
- (_Bool)isCameraFront;
- (void)FlipCamera;
- (void)HeadSetPlugin:(_Bool)arg1;
- (void)SetSpeakerPhone:(_Bool)arg1;
- (void)SetMicroPhoneMute:(_Bool)arg1;
- (void)SetRemoteVideoEnable:(_Bool)arg1;
- (void)SetLocalVideoEnable:(_Bool)arg1;
- (unsigned int)getNextInviteAvailable;
- (int)getNetSpeed;
- (void)Hangup;
- (void)Ignore:(id)arg1 withRoomId:(int)arg2 andKey:(long long)arg3;
- (void)Reject:(id)arg1 withRoomId:(int)arg2 andKey:(long long)arg3;
- (void)AcceptVideo:(id)arg1 withRoomId:(int)arg2 andKey:(long long)arg3 forceToVoice:(_Bool)arg4;
- (void)AcceptAudio:(id)arg1 withRoomId:(int)arg2 andKey:(long long)arg3;
- (void)RealAccept:(id)arg1 forceToVoice:(_Bool)arg2;
- (void)BeCanceled;
- (void)CancelCall:(int)arg1;
- (void)VideoCall:(id)arg1 withCallType:(unsigned int)arg2;
- (void)AudioCall:(id)arg1 withCallType:(unsigned int)arg2;
- (void)RealCall:(id)arg1 withCallType:(id)arg2;
- (void)StartLocalVideo;
- (void)setVideoDeviceDelegate:(id)arg1;
- (void)setVideoDelegate:(id)arg1;
@property(retain, nonatomic) VOIPVideoRender *smallInputVideoRender; // @synthesize smallInputVideoRender;
@property(retain, nonatomic) VOIPVideoRender *inputVideoRender; // @synthesize inputVideoRender;
- (void)setCameraPos:(long long)arg1;
- (void)updateCameraPosToFitDevice;
- (void)dealloc;
- (id)init;
- (int)DisableCodec:(int)arg1;
- (void)SendLocalNetWorkChangeCmd:(int)arg1;
- (void)StopHWDec;
- (void)StopHWEnc;
- (void)TalkBroken:(id)arg1;
- (void)StopTalk;
- (void)ShowVideoView;
- (void)StartVideoData;
- (void)StartAudioData;
- (void)StartAudioDataInNewThread;
- (void)StartRecordAndPlayAudioForVoip;
- (void)StartTalk;
- (void)tryStartTalk;
- (int)VideoDevPutData:(int)arg1 frmData:(char *)arg2 imageWidth:(unsigned int)arg3 imageHeight:(unsigned int)arg4;
- (int)ReInitHWEnc;
- (void)UpdateHWQosParam;
- (void)UpdateHWDecSession;
- (void)SetHWEncBR:(int)arg1;
- (int)GetHWEncWidth;
- (int)GetFrmType;
- (int)DecFrmError;
- (void)SendCloseHWEncCmd:(int)arg1;
- (int)AudioDevGetData:(char *)arg1 length:(unsigned int)arg2;
- (int)AudioDevPutData:(char *)arg1 length:(unsigned int)arg2;
- (int)OnTransportChannelRttAndLR:(unsigned int)arg1 lostRate:(unsigned int)arg2 type:(unsigned int)arg3;
- (int)OnTransportChannelData:(int)arg1 pData:(void *)arg2 len:(int)arg3;
- (void)DataNotify_pp:(char *)arg1 len:(int)arg2 param:(short)arg3;
- (void)SetChannelS2PInfo:(char *)arg1 len:(int)arg2;
- (void)SetChannelP2SInfo:(char *)arg1 len:(int)arg2;
- (void)GetChannelP2SInfo:(char *)arg1 len:(int)arg2;
- (void)DataNotify_Arq:(char *)arg1 len:(int)arg2 type:(unsigned char)arg3;
- (void)DataNotify:(char *)arg1 len:(int)arg2;
- (void)EventNotify:(long long)arg1 param:(int)arg2 type:(int)arg3;
- (void)RenderTexture:(struct __CVBuffer *)arg1;
- (float)getVideoDegreesWithOrientation:(long long)arg1;
- (long long)calOrientationWithNotify:(int)arg1;
- (void)SyncAudioDevOccupied:(int)arg1 app:(int)arg2;
- (void)audioDeviceStartedFail:(id)arg1;
- (void)audioDeviceUnPluginHeadset:(id)arg1;
- (void)audioDevicePluginHeadset:(id)arg1;
- (void)audioDeviceFarawayEar:(id)arg1;
- (void)audioDeviceNearEar:(id)arg1;
- (void)SetStatus:(int)arg1 andErrNo:(int)arg2;
- (void)CalcCallTime;
- (void)CalcNewDailUsedTime;
- (void)CalcDialUsedTime;
- (void)SetMVEInfo:(CDStruct_33d8b17a *)arg1;
- (int)cpuCapacity;
- (unsigned int)GetDispRate;
- (unsigned int)GetNetType;
- (int)OnTransportChannelEvent:(unsigned short)arg1 ErrNo:(int)arg2;
- (void)onAcceptBydata;
- (int)OnTransportChannelCmd:(void *)arg1 len:(int)arg2;
- (void)PushRelayData:(id)arg1;
- (void)ConnectFail:(id)arg1;
- (void)NetworkErr:(id)arg1;
- (void)StopConnect;
- (void)StartConnect;
- (void)tryStartConnect;
- (void)GotMultiRelayData:(id)arg1;
- (void)SetAudioSvrParams:(id)arg1;
- (void)StopSessionWithProtocolErr:(int)arg1;
- (void)StopSession;
- (void)StartSession;
- (int)SetServerAddr;
- (void)handleEnterForeground;
- (void)handleEnterBackground;
- (void)OnSysCallState:(int)arg1;
- (void)interruptVoipByCall:(_Bool)arg1;
- (void)interruptVoipByNonPhoneCall;
- (void)restartAudioDevice;
- (void)EndInterruption;
- (void)BeginInterruption;
- (void)TimerCheck;
- (void)UnInitAll;
- (void)resetCameraDevice;
- (void)InitAll;
- (void)OnGotRemoteRelayData:(id)arg1;
- (void)OnGotRemoteConnectData:(id)arg1;
- (void)OnGotRemoteStatus:(unsigned int)arg1 DataFlag:(unsigned int)arg2;
- (void)OnSyncError:(int)arg1;
- (void)SendSpeedTestResultReq:(unsigned long long)arg1 ResultArray:(id)arg2;
- (void)SendSpeedTestReq;
- (void)SendRedirectRequest:(unsigned int)arg1 SampleArray:(id)arg2;
- (void)SendNewStatReport:(id)arg1 daiReport:(id)arg2 channelReport:(id)arg3 engineReport:(id)arg4 engineExtReport:(id)arg5;
- (void)SendStatReportRequest;
- (void)SendHeartbeatRequest;
- (void)SendDoubleLinkSwitchRequest:(int)arg1;
- (void)SendShutdownRequest;
- (void)SendAnswerRequestBy:(id)arg1 AnswerType:(unsigned int)arg2 forceToVoice:(_Bool)arg3;
- (void)SendCancelInviteRequest;
- (void)SendInviteRequestBy:(id)arg1 InviteType:(unsigned int)arg2 CallType:(unsigned int)arg3;
- (void)SetReportData:(id *)arg1 dailReport:(id *)arg2 channelReport:(id *)arg3 engineReport:(id *)arg4 engineExtReport:(id *)arg5;
- (void)HandleSpeedTestResultResp:(id)arg1 Event:(unsigned int)arg2;
- (void)HandleSpeedTestResp:(id)arg1 Event:(unsigned int)arg2;
- (void)HandleVoipRedirectResp:(id)arg1 Event:(unsigned int)arg2;
- (void)HandleVoipStatReportResp:(id)arg1 Event:(unsigned int)arg2;
- (void)HandleVoipHeartbeatResp:(id)arg1 Event:(unsigned int)arg2;
- (void)HandleVoipDoubleLinkSwitchResp:(id)arg1 Event:(unsigned int)arg2;
- (void)HandleVoipShutdownResp:(id)arg1 Event:(unsigned int)arg2;
- (void)HandleVoipAnswerResp:(id)arg1 Event:(unsigned int)arg2;
- (void)HandleVoipCancelInviteResp:(id)arg1 Event:(unsigned int)arg2;
- (void)HandleVoipInviteResp:(id)arg1 Event:(unsigned int)arg2;
- (void)MessageReturn:(id)arg1 Event:(unsigned int)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

